# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Build
        run: |
          make html

      - name: Deploy
        run: |
          Rscript -e 'source("R/parse_groups.R")'
          Rscript -e 'source("R/parse_events.R")'
          Rscript -e 'source("R/parse_virtual.R")'

          # cd ..; mkdir gh-pages; cd gh-pages
          # git init
          #
          # git config --global user.name "jumpingrivers"
          # git config --global user.email "csgillespie+jumpingrivers@gmail.com"
          # git config --global push.default simple
          # echo "Remote 1"
          # echo ${GITHUB_REPOSITORY}
          # git remote add upstream "https://${GITHUB_PAT}@github.com/${GITHUB_REPOSITORY}.git"
          # echo "Remote 2"
          # git fetch upstream #2>err.txt
          echo "Remote 3"
          git checkout gh-pages
          echo "Remote 4"
          cp -fvr ${GITHUB_WORKSPACE}/_book/* .
          echo "Remote 5"
          git add libs/*; git add css/*
          echo "Remote 6"
          git add *.json; git add *.html; git add main.md; git add style.css events.csv groups.csv virtual.csv
          echo "Remote 7"
          echo ${COMMIT_MESSAGE}
          echo ${GITHUB_JOB}
          git commit -a -m "#rstats ${COMMIT_MESSAGE} (${GITHUB_JOB})"
          echo "Remote 8"
          git status
          echo "Remote 9"
          git push
          echo "Remote 10"
          cd ..
          echo "Remote 11"


      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
